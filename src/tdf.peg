---
export type TDFObj = { [k: string]: (TDFObj | string) };
---

Start := root=SectionBody $

LineComment := '//.*'
BlockComment := '/\*.*?\*/'s
Comment := LineComment | BlockComment
Empty := { '\s*' Comment? }*

Key := '[^\s=]+'
UnquotedValue := value='[^\n;]*'
QuotedValue := '"' value='[^\n"]*' '"[ \t]*' &';'
Entry := !'\[' key=Key '[ \t]*=[ \t]*' _val={ QuotedValue | UnquotedValue } ';+'
	.value = string { return this._val.value; }

SectionBody := Empty _e={ _el={ Section | Entry } Empty }*
	.value = TDFObj { return Object.fromEntries(this._e.map(e => [e._el.key.toLowerCase(), e._el.value])); }

Section := '\[' key='[^\]]+' '\]' Empty '\{' body=SectionBody '\}'
	.value = TDFObj { return body.value; }
